services:
  nginx-gateway:
    image: "$DOCKER_USERNAME/nginx:$TAG"
    container_name: nginx-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ubuntu/website/logs:/var/log/nginx
      - /home/ubuntu/website/nginx/certificates:/etc/letsencrypt
      - /home/ubuntu/website/nginx/certificates-data:/data/certbot
      - /home/ubuntu/website/nginx/.htpasswd:/etc/nginx/.htpasswd
    networks:
      - webnet
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /home/ubuntu/website/nginx/certificates:/etc/letsencrypt
      - /home/ubuntu/website/nginx/certificates-data:/data/certbot
    entrypoint: >
      sh -c "
        while :; do
          certbot renew;
          sleep 12h & wait $${!};
        done"
    networks:
      - webnet
    restart: on-failure

  minio:
    image: minio/minio
    container_name: minio
    expose:
      - "9000"   # S3 API
      - "9001"   # MinIO Console
    environment:
      MINIO_ROOT_USER: $MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: $MINIO_ROOT_PASSWORD
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      webnet:
      vpn_custom_network:
        ipv4_address: 10.13.14.3
    restart: always

  mongodb:
    image: mongo:6
    container_name: mongo
    expose:
      - 27017
    environment:
      MONGO_INITDB_DATABASE: images
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - mongo_data:/data/db
    networks:
      webnet:
      vpn_custom_network:
        ipv4_address: 10.13.14.4
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    expose:
      - 9090
    networks:
      - monitoring
    volumes:
      - /home/ubuntu/website/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=24h
      - --storage.tsdb.retention.size=500MB
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  grafana:
    image: grafana/grafana
    container_name: grafana
    expose:
      - 3000
    networks:
      monitoring:
      vpn_custom_network:
        ipv4_address: 10.13.14.5
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    expose:
      - "9100"
    networks:
      - monitoring
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/host'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /:/host:ro

networks:
  webnet:
  monitoring:
  vpn_custom_network:
    external: true

volumes:
  minio_data:
  mongo_data:
  grafana-storage: